<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<db:config name="Database_Config" doc:name="Database Config" doc:id="a74c11b6-80fd-47a7-b6f4-f05f41a3ad77" >
		<db:my-sql-connection port="3306" host="training4quintrix.clfl8y3ktaxf.us-west-2.rds.amazonaws.com" user="root4training" password="root4trainingp">
			<reconnection >
				<reconnect />
			</reconnection>
			<db:pooling-profile />
		</db:my-sql-connection>
	</db:config>
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="b12bcd4d-b8a3-4b0f-b786-3302aa7ecaf6" basePath="/api">
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<flow name="getCustomers" doc:id="e77319dc-f6af-4bb6-ba4f-c2c52f2588f7" >
		<http:listener doc:name="Listener" doc:id="8cffe565-d9dd-40b2-b93e-a98a5f7af0be" config-ref="HTTP_Listener_config" path="/getCustomers"/>
		<db:select doc:name="Select" doc:id="8728065a-9987-452a-ab3d-fa05032bcf3b" config-ref="Database_Config">
			<db:sql >SELECT * FROM training.customer;</db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="86957b1c-0ddb-4b78-9408-fd31a123c229">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map{
	customerId: $.customer_id as String,
	name: $.customer_lastName,
	phoneNumber: $.customer_phoneNumber default "",
	SSN: $.customer_SSN default "",
	indexOfRecord : $$
}


/*payload map(payload01, indexOfPayload01)->{
	customerId: payload01.customer_id as String,
	name: payload01.customer_lastName,
	phoneNumber: payload01.customer_phoneNumber default "",
	SSN: payload01.customer_SSN default ""
}*/
	
	
	/*customerId:payload[0].customer_id as String,
	name:payload.customer_lastName + " "+payload.customer_firstName,
	phoneNumber:payload.customer_phoneNumber default "",
	emailedId: payload.customer_emailId default "",
	SSN: payload.customer_SSN default ""*/
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="c015d882-d6d4-42de-9283-1af5893c9ea0" message='"Hello World"'/>
	</flow>
	<flow name="insertCustomers" doc:id="64a79938-9552-4358-b38d-6b5f2ae3a7ce" >
		<http:listener doc:name="Listener" doc:id="9c91b98f-5d35-43df-aa4c-e0f0a3783ccb" config-ref="HTTP_Listener_config" path="/insertCustomer"/>
		<db:insert doc:name="Insert" doc:id="765265af-7a02-4690-bd63-eae560cb9723" config-ref="Database_Config">
			<db:sql >INSERT INTO training.customer ( customer_id, customer_lastName, customer_firstName,customer_phoneNumber,customer_emailId,customer_SSN )
   VALUES
   (  :id,:lastname,:firstname,:phone,:email,:ssn);</db:sql>
			<db:input-parameters ><![CDATA[#[
{
id : payload.customerId,
lastname: payload.lastname,
firstname: payload.firstname,
phone:payload.phoneNumber,
email:payload.emailId,
ssn:payload.SSN
}
]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Transform Message" doc:id="6494ccb3-d402-4406-896a-e41376cb8492" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	result : payload
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8d331de8-c534-4b62-847c-8d7ebac848b5"/>
	</flow>
	<flow name="updateCustomers" doc:id="a6a85ee2-98c8-4e05-8de8-3b19abc5d059">
		<http:listener doc:name="Listener" doc:id="db8ff5cf-4215-4df7-97d7-a57fc52c7a14" config-ref="HTTP_Listener_config" path="/updateCustomer"/>
		<db:update doc:name="Update" doc:id="8c9da96d-40d2-4736-a0ff-521435da4854" config-ref="Database_Config">
			<db:sql>UPDATE training.customer SET customer_lastName = :lastname, customer_phoneNumber = :phone Where customer_id = ;
</db:sql>
			<db:input-parameters ><![CDATA[#[
{
id : payload.customerId,
lastname: payload.lastname,
phone:payload.phoneNumber
}
]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Transform Message" doc:id="7849e6c0-a109-44d5-8090-ff519de34b3e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	result:payload
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="56c9f154-17c9-498e-9bcb-ae3e99c23a15" />
	</flow>
	<flow name="deleteCustomer" doc:id="d8e6260b-bf99-47a3-819f-84c515052af8" >
		<http:listener doc:name="Listener" doc:id="43f45471-a68d-443a-98d7-8aaf625d0bc8" config-ref="HTTP_Listener_config" path="/deleteCustomer"/>
		<db:delete doc:name="Delete" doc:id="b776e21d-baf9-4d59-832a-ecbce14b2d82" config-ref="Database_Config">
			<db:sql >DELETE FROM training.customer where customer_id!=:id;</db:sql>
			<db:input-parameters ><![CDATA[#[{
id : payload.customerId
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="94e42b98-c317-4dee-b315-5cf0bfa7ce3b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	result:payload
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="5a3500c8-5492-4d11-80e0-12be15a422bf" />
	</flow>
</mule>